// Code generated by go-swagger; DO NOT EDIT.

package public_ip

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"
)

// ReadPublicIpsReader is a Reader for the ReadPublicIps structure.
type ReadPublicIpsReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *ReadPublicIpsReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewReadPublicIpsOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewReadPublicIpsBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewReadPublicIpsUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewReadPublicIpsInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewReadPublicIpsOK creates a ReadPublicIpsOK with default headers values
func NewReadPublicIpsOK() *ReadPublicIpsOK {
	return &ReadPublicIpsOK{}
}

/*ReadPublicIpsOK handles this case with default header values.

The HTTP 200 response (OK).
*/
type ReadPublicIpsOK struct {
}

func (o *ReadPublicIpsOK) Error() string {
	return fmt.Sprintf("[POST /ReadPublicIps][%d] readPublicIpsOK ", 200)
}

func (o *ReadPublicIpsOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewReadPublicIpsBadRequest creates a ReadPublicIpsBadRequest with default headers values
func NewReadPublicIpsBadRequest() *ReadPublicIpsBadRequest {
	return &ReadPublicIpsBadRequest{}
}

/*ReadPublicIpsBadRequest handles this case with default header values.

The HTTP 400 response (Bad Request).
*/
type ReadPublicIpsBadRequest struct {
}

func (o *ReadPublicIpsBadRequest) Error() string {
	return fmt.Sprintf("[POST /ReadPublicIps][%d] readPublicIpsBadRequest ", 400)
}

func (o *ReadPublicIpsBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewReadPublicIpsUnauthorized creates a ReadPublicIpsUnauthorized with default headers values
func NewReadPublicIpsUnauthorized() *ReadPublicIpsUnauthorized {
	return &ReadPublicIpsUnauthorized{}
}

/*ReadPublicIpsUnauthorized handles this case with default header values.

The HTTP 401 response (Unauthorized).
*/
type ReadPublicIpsUnauthorized struct {
}

func (o *ReadPublicIpsUnauthorized) Error() string {
	return fmt.Sprintf("[POST /ReadPublicIps][%d] readPublicIpsUnauthorized ", 401)
}

func (o *ReadPublicIpsUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewReadPublicIpsInternalServerError creates a ReadPublicIpsInternalServerError with default headers values
func NewReadPublicIpsInternalServerError() *ReadPublicIpsInternalServerError {
	return &ReadPublicIpsInternalServerError{}
}

/*ReadPublicIpsInternalServerError handles this case with default header values.

The HTTP 500 response (Internal Server Error).
*/
type ReadPublicIpsInternalServerError struct {
}

func (o *ReadPublicIpsInternalServerError) Error() string {
	return fmt.Sprintf("[POST /ReadPublicIps][%d] readPublicIpsInternalServerError ", 500)
}

func (o *ReadPublicIpsInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
