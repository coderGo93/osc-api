// Code generated by go-swagger; DO NOT EDIT.

package public_ip

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"
)

// UnlinkPublicIPReader is a Reader for the UnlinkPublicIP structure.
type UnlinkPublicIPReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *UnlinkPublicIPReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewUnlinkPublicIPOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewUnlinkPublicIPBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewUnlinkPublicIPUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewUnlinkPublicIPInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewUnlinkPublicIPOK creates a UnlinkPublicIPOK with default headers values
func NewUnlinkPublicIPOK() *UnlinkPublicIPOK {
	return &UnlinkPublicIPOK{}
}

/*UnlinkPublicIPOK handles this case with default header values.

The HTTP 200 response (OK).
*/
type UnlinkPublicIPOK struct {
}

func (o *UnlinkPublicIPOK) Error() string {
	return fmt.Sprintf("[POST /UnlinkPublicIp][%d] unlinkPublicIpOK ", 200)
}

func (o *UnlinkPublicIPOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewUnlinkPublicIPBadRequest creates a UnlinkPublicIPBadRequest with default headers values
func NewUnlinkPublicIPBadRequest() *UnlinkPublicIPBadRequest {
	return &UnlinkPublicIPBadRequest{}
}

/*UnlinkPublicIPBadRequest handles this case with default header values.

The HTTP 400 response (Bad Request).
*/
type UnlinkPublicIPBadRequest struct {
}

func (o *UnlinkPublicIPBadRequest) Error() string {
	return fmt.Sprintf("[POST /UnlinkPublicIp][%d] unlinkPublicIpBadRequest ", 400)
}

func (o *UnlinkPublicIPBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewUnlinkPublicIPUnauthorized creates a UnlinkPublicIPUnauthorized with default headers values
func NewUnlinkPublicIPUnauthorized() *UnlinkPublicIPUnauthorized {
	return &UnlinkPublicIPUnauthorized{}
}

/*UnlinkPublicIPUnauthorized handles this case with default header values.

The HTTP 401 response (Unauthorized).
*/
type UnlinkPublicIPUnauthorized struct {
}

func (o *UnlinkPublicIPUnauthorized) Error() string {
	return fmt.Sprintf("[POST /UnlinkPublicIp][%d] unlinkPublicIpUnauthorized ", 401)
}

func (o *UnlinkPublicIPUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewUnlinkPublicIPInternalServerError creates a UnlinkPublicIPInternalServerError with default headers values
func NewUnlinkPublicIPInternalServerError() *UnlinkPublicIPInternalServerError {
	return &UnlinkPublicIPInternalServerError{}
}

/*UnlinkPublicIPInternalServerError handles this case with default header values.

The HTTP 500 response (Internal Server Error).
*/
type UnlinkPublicIPInternalServerError struct {
}

func (o *UnlinkPublicIPInternalServerError) Error() string {
	return fmt.Sprintf("[POST /UnlinkPublicIp][%d] unlinkPublicIpInternalServerError ", 500)
}

func (o *UnlinkPublicIPInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
