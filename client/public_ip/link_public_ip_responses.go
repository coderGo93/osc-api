// Code generated by go-swagger; DO NOT EDIT.

package public_ip

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"
)

// LinkPublicIPReader is a Reader for the LinkPublicIP structure.
type LinkPublicIPReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *LinkPublicIPReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewLinkPublicIPOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewLinkPublicIPBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewLinkPublicIPUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewLinkPublicIPInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewLinkPublicIPOK creates a LinkPublicIPOK with default headers values
func NewLinkPublicIPOK() *LinkPublicIPOK {
	return &LinkPublicIPOK{}
}

/*LinkPublicIPOK handles this case with default header values.

The HTTP 200 response (OK).
*/
type LinkPublicIPOK struct {
}

func (o *LinkPublicIPOK) Error() string {
	return fmt.Sprintf("[POST /LinkPublicIp][%d] linkPublicIpOK ", 200)
}

func (o *LinkPublicIPOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewLinkPublicIPBadRequest creates a LinkPublicIPBadRequest with default headers values
func NewLinkPublicIPBadRequest() *LinkPublicIPBadRequest {
	return &LinkPublicIPBadRequest{}
}

/*LinkPublicIPBadRequest handles this case with default header values.

The HTTP 400 response (Bad Request).
*/
type LinkPublicIPBadRequest struct {
}

func (o *LinkPublicIPBadRequest) Error() string {
	return fmt.Sprintf("[POST /LinkPublicIp][%d] linkPublicIpBadRequest ", 400)
}

func (o *LinkPublicIPBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewLinkPublicIPUnauthorized creates a LinkPublicIPUnauthorized with default headers values
func NewLinkPublicIPUnauthorized() *LinkPublicIPUnauthorized {
	return &LinkPublicIPUnauthorized{}
}

/*LinkPublicIPUnauthorized handles this case with default header values.

The HTTP 401 response (Unauthorized).
*/
type LinkPublicIPUnauthorized struct {
}

func (o *LinkPublicIPUnauthorized) Error() string {
	return fmt.Sprintf("[POST /LinkPublicIp][%d] linkPublicIpUnauthorized ", 401)
}

func (o *LinkPublicIPUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewLinkPublicIPInternalServerError creates a LinkPublicIPInternalServerError with default headers values
func NewLinkPublicIPInternalServerError() *LinkPublicIPInternalServerError {
	return &LinkPublicIPInternalServerError{}
}

/*LinkPublicIPInternalServerError handles this case with default header values.

The HTTP 500 response (Internal Server Error).
*/
type LinkPublicIPInternalServerError struct {
}

func (o *LinkPublicIPInternalServerError) Error() string {
	return fmt.Sprintf("[POST /LinkPublicIp][%d] linkPublicIpInternalServerError ", 500)
}

func (o *LinkPublicIPInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
