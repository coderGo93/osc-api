// Code generated by go-swagger; DO NOT EDIT.

package tag

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"
)

// ReadTagsReader is a Reader for the ReadTags structure.
type ReadTagsReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *ReadTagsReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewReadTagsOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewReadTagsBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewReadTagsUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewReadTagsInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewReadTagsOK creates a ReadTagsOK with default headers values
func NewReadTagsOK() *ReadTagsOK {
	return &ReadTagsOK{}
}

/*ReadTagsOK handles this case with default header values.

The HTTP 200 response (OK).
*/
type ReadTagsOK struct {
}

func (o *ReadTagsOK) Error() string {
	return fmt.Sprintf("[POST /ReadTags][%d] readTagsOK ", 200)
}

func (o *ReadTagsOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewReadTagsBadRequest creates a ReadTagsBadRequest with default headers values
func NewReadTagsBadRequest() *ReadTagsBadRequest {
	return &ReadTagsBadRequest{}
}

/*ReadTagsBadRequest handles this case with default header values.

The HTTP 400 response (Bad Request).
*/
type ReadTagsBadRequest struct {
}

func (o *ReadTagsBadRequest) Error() string {
	return fmt.Sprintf("[POST /ReadTags][%d] readTagsBadRequest ", 400)
}

func (o *ReadTagsBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewReadTagsUnauthorized creates a ReadTagsUnauthorized with default headers values
func NewReadTagsUnauthorized() *ReadTagsUnauthorized {
	return &ReadTagsUnauthorized{}
}

/*ReadTagsUnauthorized handles this case with default header values.

The HTTP 401 response (Unauthorized).
*/
type ReadTagsUnauthorized struct {
}

func (o *ReadTagsUnauthorized) Error() string {
	return fmt.Sprintf("[POST /ReadTags][%d] readTagsUnauthorized ", 401)
}

func (o *ReadTagsUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewReadTagsInternalServerError creates a ReadTagsInternalServerError with default headers values
func NewReadTagsInternalServerError() *ReadTagsInternalServerError {
	return &ReadTagsInternalServerError{}
}

/*ReadTagsInternalServerError handles this case with default header values.

The HTTP 500 response (Internal Server Error).
*/
type ReadTagsInternalServerError struct {
}

func (o *ReadTagsInternalServerError) Error() string {
	return fmt.Sprintf("[POST /ReadTags][%d] readTagsInternalServerError ", 500)
}

func (o *ReadTagsInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
