// Code generated by go-swagger; DO NOT EDIT.

package nat_service

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"
)

// CreateNatServiceReader is a Reader for the CreateNatService structure.
type CreateNatServiceReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *CreateNatServiceReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewCreateNatServiceOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewCreateNatServiceBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewCreateNatServiceUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewCreateNatServiceInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewCreateNatServiceOK creates a CreateNatServiceOK with default headers values
func NewCreateNatServiceOK() *CreateNatServiceOK {
	return &CreateNatServiceOK{}
}

/*CreateNatServiceOK handles this case with default header values.

The HTTP 200 response (OK).
*/
type CreateNatServiceOK struct {
}

func (o *CreateNatServiceOK) Error() string {
	return fmt.Sprintf("[POST /CreateNatService][%d] createNatServiceOK ", 200)
}

func (o *CreateNatServiceOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewCreateNatServiceBadRequest creates a CreateNatServiceBadRequest with default headers values
func NewCreateNatServiceBadRequest() *CreateNatServiceBadRequest {
	return &CreateNatServiceBadRequest{}
}

/*CreateNatServiceBadRequest handles this case with default header values.

The HTTP 400 response (Bad Request).
*/
type CreateNatServiceBadRequest struct {
}

func (o *CreateNatServiceBadRequest) Error() string {
	return fmt.Sprintf("[POST /CreateNatService][%d] createNatServiceBadRequest ", 400)
}

func (o *CreateNatServiceBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewCreateNatServiceUnauthorized creates a CreateNatServiceUnauthorized with default headers values
func NewCreateNatServiceUnauthorized() *CreateNatServiceUnauthorized {
	return &CreateNatServiceUnauthorized{}
}

/*CreateNatServiceUnauthorized handles this case with default header values.

The HTTP 401 response (Unauthorized).
*/
type CreateNatServiceUnauthorized struct {
}

func (o *CreateNatServiceUnauthorized) Error() string {
	return fmt.Sprintf("[POST /CreateNatService][%d] createNatServiceUnauthorized ", 401)
}

func (o *CreateNatServiceUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewCreateNatServiceInternalServerError creates a CreateNatServiceInternalServerError with default headers values
func NewCreateNatServiceInternalServerError() *CreateNatServiceInternalServerError {
	return &CreateNatServiceInternalServerError{}
}

/*CreateNatServiceInternalServerError handles this case with default header values.

The HTTP 500 response (Internal Server Error).
*/
type CreateNatServiceInternalServerError struct {
}

func (o *CreateNatServiceInternalServerError) Error() string {
	return fmt.Sprintf("[POST /CreateNatService][%d] createNatServiceInternalServerError ", 500)
}

func (o *CreateNatServiceInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
