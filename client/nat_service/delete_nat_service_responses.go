// Code generated by go-swagger; DO NOT EDIT.

package nat_service

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"
)

// DeleteNatServiceReader is a Reader for the DeleteNatService structure.
type DeleteNatServiceReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *DeleteNatServiceReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewDeleteNatServiceOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewDeleteNatServiceBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewDeleteNatServiceUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewDeleteNatServiceInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewDeleteNatServiceOK creates a DeleteNatServiceOK with default headers values
func NewDeleteNatServiceOK() *DeleteNatServiceOK {
	return &DeleteNatServiceOK{}
}

/*DeleteNatServiceOK handles this case with default header values.

The HTTP 200 response (OK).
*/
type DeleteNatServiceOK struct {
}

func (o *DeleteNatServiceOK) Error() string {
	return fmt.Sprintf("[POST /DeleteNatService][%d] deleteNatServiceOK ", 200)
}

func (o *DeleteNatServiceOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewDeleteNatServiceBadRequest creates a DeleteNatServiceBadRequest with default headers values
func NewDeleteNatServiceBadRequest() *DeleteNatServiceBadRequest {
	return &DeleteNatServiceBadRequest{}
}

/*DeleteNatServiceBadRequest handles this case with default header values.

The HTTP 400 response (Bad Request).
*/
type DeleteNatServiceBadRequest struct {
}

func (o *DeleteNatServiceBadRequest) Error() string {
	return fmt.Sprintf("[POST /DeleteNatService][%d] deleteNatServiceBadRequest ", 400)
}

func (o *DeleteNatServiceBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewDeleteNatServiceUnauthorized creates a DeleteNatServiceUnauthorized with default headers values
func NewDeleteNatServiceUnauthorized() *DeleteNatServiceUnauthorized {
	return &DeleteNatServiceUnauthorized{}
}

/*DeleteNatServiceUnauthorized handles this case with default header values.

The HTTP 401 response (Unauthorized).
*/
type DeleteNatServiceUnauthorized struct {
}

func (o *DeleteNatServiceUnauthorized) Error() string {
	return fmt.Sprintf("[POST /DeleteNatService][%d] deleteNatServiceUnauthorized ", 401)
}

func (o *DeleteNatServiceUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewDeleteNatServiceInternalServerError creates a DeleteNatServiceInternalServerError with default headers values
func NewDeleteNatServiceInternalServerError() *DeleteNatServiceInternalServerError {
	return &DeleteNatServiceInternalServerError{}
}

/*DeleteNatServiceInternalServerError handles this case with default header values.

The HTTP 500 response (Internal Server Error).
*/
type DeleteNatServiceInternalServerError struct {
}

func (o *DeleteNatServiceInternalServerError) Error() string {
	return fmt.Sprintf("[POST /DeleteNatService][%d] deleteNatServiceInternalServerError ", 500)
}

func (o *DeleteNatServiceInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
