// Code generated by go-swagger; DO NOT EDIT.

package subnet

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"
)

// DeleteSubnetReader is a Reader for the DeleteSubnet structure.
type DeleteSubnetReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *DeleteSubnetReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewDeleteSubnetOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewDeleteSubnetBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewDeleteSubnetUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewDeleteSubnetInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewDeleteSubnetOK creates a DeleteSubnetOK with default headers values
func NewDeleteSubnetOK() *DeleteSubnetOK {
	return &DeleteSubnetOK{}
}

/*DeleteSubnetOK handles this case with default header values.

The HTTP 200 response (OK).
*/
type DeleteSubnetOK struct {
}

func (o *DeleteSubnetOK) Error() string {
	return fmt.Sprintf("[POST /DeleteSubnet][%d] deleteSubnetOK ", 200)
}

func (o *DeleteSubnetOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewDeleteSubnetBadRequest creates a DeleteSubnetBadRequest with default headers values
func NewDeleteSubnetBadRequest() *DeleteSubnetBadRequest {
	return &DeleteSubnetBadRequest{}
}

/*DeleteSubnetBadRequest handles this case with default header values.

The HTTP 400 response (Bad Request).
*/
type DeleteSubnetBadRequest struct {
}

func (o *DeleteSubnetBadRequest) Error() string {
	return fmt.Sprintf("[POST /DeleteSubnet][%d] deleteSubnetBadRequest ", 400)
}

func (o *DeleteSubnetBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewDeleteSubnetUnauthorized creates a DeleteSubnetUnauthorized with default headers values
func NewDeleteSubnetUnauthorized() *DeleteSubnetUnauthorized {
	return &DeleteSubnetUnauthorized{}
}

/*DeleteSubnetUnauthorized handles this case with default header values.

The HTTP 401 response (Unauthorized).
*/
type DeleteSubnetUnauthorized struct {
}

func (o *DeleteSubnetUnauthorized) Error() string {
	return fmt.Sprintf("[POST /DeleteSubnet][%d] deleteSubnetUnauthorized ", 401)
}

func (o *DeleteSubnetUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewDeleteSubnetInternalServerError creates a DeleteSubnetInternalServerError with default headers values
func NewDeleteSubnetInternalServerError() *DeleteSubnetInternalServerError {
	return &DeleteSubnetInternalServerError{}
}

/*DeleteSubnetInternalServerError handles this case with default header values.

The HTTP 500 response (Internal Server Error).
*/
type DeleteSubnetInternalServerError struct {
}

func (o *DeleteSubnetInternalServerError) Error() string {
	return fmt.Sprintf("[POST /DeleteSubnet][%d] deleteSubnetInternalServerError ", 500)
}

func (o *DeleteSubnetInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
