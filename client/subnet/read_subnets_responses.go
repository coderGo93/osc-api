// Code generated by go-swagger; DO NOT EDIT.

package subnet

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"
)

// ReadSubnetsReader is a Reader for the ReadSubnets structure.
type ReadSubnetsReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *ReadSubnetsReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewReadSubnetsOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewReadSubnetsBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewReadSubnetsUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewReadSubnetsInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewReadSubnetsOK creates a ReadSubnetsOK with default headers values
func NewReadSubnetsOK() *ReadSubnetsOK {
	return &ReadSubnetsOK{}
}

/*ReadSubnetsOK handles this case with default header values.

The HTTP 200 response (OK).
*/
type ReadSubnetsOK struct {
}

func (o *ReadSubnetsOK) Error() string {
	return fmt.Sprintf("[POST /ReadSubnets][%d] readSubnetsOK ", 200)
}

func (o *ReadSubnetsOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewReadSubnetsBadRequest creates a ReadSubnetsBadRequest with default headers values
func NewReadSubnetsBadRequest() *ReadSubnetsBadRequest {
	return &ReadSubnetsBadRequest{}
}

/*ReadSubnetsBadRequest handles this case with default header values.

The HTTP 400 response (Bad Request).
*/
type ReadSubnetsBadRequest struct {
}

func (o *ReadSubnetsBadRequest) Error() string {
	return fmt.Sprintf("[POST /ReadSubnets][%d] readSubnetsBadRequest ", 400)
}

func (o *ReadSubnetsBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewReadSubnetsUnauthorized creates a ReadSubnetsUnauthorized with default headers values
func NewReadSubnetsUnauthorized() *ReadSubnetsUnauthorized {
	return &ReadSubnetsUnauthorized{}
}

/*ReadSubnetsUnauthorized handles this case with default header values.

The HTTP 401 response (Unauthorized).
*/
type ReadSubnetsUnauthorized struct {
}

func (o *ReadSubnetsUnauthorized) Error() string {
	return fmt.Sprintf("[POST /ReadSubnets][%d] readSubnetsUnauthorized ", 401)
}

func (o *ReadSubnetsUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewReadSubnetsInternalServerError creates a ReadSubnetsInternalServerError with default headers values
func NewReadSubnetsInternalServerError() *ReadSubnetsInternalServerError {
	return &ReadSubnetsInternalServerError{}
}

/*ReadSubnetsInternalServerError handles this case with default header values.

The HTTP 500 response (Internal Server Error).
*/
type ReadSubnetsInternalServerError struct {
}

func (o *ReadSubnetsInternalServerError) Error() string {
	return fmt.Sprintf("[POST /ReadSubnets][%d] readSubnetsInternalServerError ", 500)
}

func (o *ReadSubnetsInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
