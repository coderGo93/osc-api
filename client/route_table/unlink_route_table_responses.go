// Code generated by go-swagger; DO NOT EDIT.

package route_table

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"
)

// UnlinkRouteTableReader is a Reader for the UnlinkRouteTable structure.
type UnlinkRouteTableReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *UnlinkRouteTableReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewUnlinkRouteTableOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewUnlinkRouteTableBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewUnlinkRouteTableUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewUnlinkRouteTableInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewUnlinkRouteTableOK creates a UnlinkRouteTableOK with default headers values
func NewUnlinkRouteTableOK() *UnlinkRouteTableOK {
	return &UnlinkRouteTableOK{}
}

/*UnlinkRouteTableOK handles this case with default header values.

The HTTP 200 response (OK).
*/
type UnlinkRouteTableOK struct {
}

func (o *UnlinkRouteTableOK) Error() string {
	return fmt.Sprintf("[POST /UnlinkRouteTable][%d] unlinkRouteTableOK ", 200)
}

func (o *UnlinkRouteTableOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewUnlinkRouteTableBadRequest creates a UnlinkRouteTableBadRequest with default headers values
func NewUnlinkRouteTableBadRequest() *UnlinkRouteTableBadRequest {
	return &UnlinkRouteTableBadRequest{}
}

/*UnlinkRouteTableBadRequest handles this case with default header values.

The HTTP 400 response (Bad Request).
*/
type UnlinkRouteTableBadRequest struct {
}

func (o *UnlinkRouteTableBadRequest) Error() string {
	return fmt.Sprintf("[POST /UnlinkRouteTable][%d] unlinkRouteTableBadRequest ", 400)
}

func (o *UnlinkRouteTableBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewUnlinkRouteTableUnauthorized creates a UnlinkRouteTableUnauthorized with default headers values
func NewUnlinkRouteTableUnauthorized() *UnlinkRouteTableUnauthorized {
	return &UnlinkRouteTableUnauthorized{}
}

/*UnlinkRouteTableUnauthorized handles this case with default header values.

The HTTP 401 response (Unauthorized).
*/
type UnlinkRouteTableUnauthorized struct {
}

func (o *UnlinkRouteTableUnauthorized) Error() string {
	return fmt.Sprintf("[POST /UnlinkRouteTable][%d] unlinkRouteTableUnauthorized ", 401)
}

func (o *UnlinkRouteTableUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewUnlinkRouteTableInternalServerError creates a UnlinkRouteTableInternalServerError with default headers values
func NewUnlinkRouteTableInternalServerError() *UnlinkRouteTableInternalServerError {
	return &UnlinkRouteTableInternalServerError{}
}

/*UnlinkRouteTableInternalServerError handles this case with default header values.

The HTTP 500 response (Internal Server Error).
*/
type UnlinkRouteTableInternalServerError struct {
}

func (o *UnlinkRouteTableInternalServerError) Error() string {
	return fmt.Sprintf("[POST /UnlinkRouteTable][%d] unlinkRouteTableInternalServerError ", 500)
}

func (o *UnlinkRouteTableInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
