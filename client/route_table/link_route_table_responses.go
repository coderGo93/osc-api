// Code generated by go-swagger; DO NOT EDIT.

package route_table

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"
)

// LinkRouteTableReader is a Reader for the LinkRouteTable structure.
type LinkRouteTableReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *LinkRouteTableReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewLinkRouteTableOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewLinkRouteTableBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewLinkRouteTableUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewLinkRouteTableInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewLinkRouteTableOK creates a LinkRouteTableOK with default headers values
func NewLinkRouteTableOK() *LinkRouteTableOK {
	return &LinkRouteTableOK{}
}

/*LinkRouteTableOK handles this case with default header values.

The HTTP 200 response (OK).
*/
type LinkRouteTableOK struct {
}

func (o *LinkRouteTableOK) Error() string {
	return fmt.Sprintf("[POST /LinkRouteTable][%d] linkRouteTableOK ", 200)
}

func (o *LinkRouteTableOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewLinkRouteTableBadRequest creates a LinkRouteTableBadRequest with default headers values
func NewLinkRouteTableBadRequest() *LinkRouteTableBadRequest {
	return &LinkRouteTableBadRequest{}
}

/*LinkRouteTableBadRequest handles this case with default header values.

The HTTP 400 response (Bad Request).
*/
type LinkRouteTableBadRequest struct {
}

func (o *LinkRouteTableBadRequest) Error() string {
	return fmt.Sprintf("[POST /LinkRouteTable][%d] linkRouteTableBadRequest ", 400)
}

func (o *LinkRouteTableBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewLinkRouteTableUnauthorized creates a LinkRouteTableUnauthorized with default headers values
func NewLinkRouteTableUnauthorized() *LinkRouteTableUnauthorized {
	return &LinkRouteTableUnauthorized{}
}

/*LinkRouteTableUnauthorized handles this case with default header values.

The HTTP 401 response (Unauthorized).
*/
type LinkRouteTableUnauthorized struct {
}

func (o *LinkRouteTableUnauthorized) Error() string {
	return fmt.Sprintf("[POST /LinkRouteTable][%d] linkRouteTableUnauthorized ", 401)
}

func (o *LinkRouteTableUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewLinkRouteTableInternalServerError creates a LinkRouteTableInternalServerError with default headers values
func NewLinkRouteTableInternalServerError() *LinkRouteTableInternalServerError {
	return &LinkRouteTableInternalServerError{}
}

/*LinkRouteTableInternalServerError handles this case with default header values.

The HTTP 500 response (Internal Server Error).
*/
type LinkRouteTableInternalServerError struct {
}

func (o *LinkRouteTableInternalServerError) Error() string {
	return fmt.Sprintf("[POST /LinkRouteTable][%d] linkRouteTableInternalServerError ", 500)
}

func (o *LinkRouteTableInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
