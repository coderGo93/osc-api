// Code generated by go-swagger; DO NOT EDIT.

package route_table

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"
)

// DeleteRouteTableReader is a Reader for the DeleteRouteTable structure.
type DeleteRouteTableReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *DeleteRouteTableReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewDeleteRouteTableOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewDeleteRouteTableBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewDeleteRouteTableUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewDeleteRouteTableInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewDeleteRouteTableOK creates a DeleteRouteTableOK with default headers values
func NewDeleteRouteTableOK() *DeleteRouteTableOK {
	return &DeleteRouteTableOK{}
}

/*DeleteRouteTableOK handles this case with default header values.

The HTTP 200 response (OK).
*/
type DeleteRouteTableOK struct {
}

func (o *DeleteRouteTableOK) Error() string {
	return fmt.Sprintf("[POST /DeleteRouteTable][%d] deleteRouteTableOK ", 200)
}

func (o *DeleteRouteTableOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewDeleteRouteTableBadRequest creates a DeleteRouteTableBadRequest with default headers values
func NewDeleteRouteTableBadRequest() *DeleteRouteTableBadRequest {
	return &DeleteRouteTableBadRequest{}
}

/*DeleteRouteTableBadRequest handles this case with default header values.

The HTTP 400 response (Bad Request).
*/
type DeleteRouteTableBadRequest struct {
}

func (o *DeleteRouteTableBadRequest) Error() string {
	return fmt.Sprintf("[POST /DeleteRouteTable][%d] deleteRouteTableBadRequest ", 400)
}

func (o *DeleteRouteTableBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewDeleteRouteTableUnauthorized creates a DeleteRouteTableUnauthorized with default headers values
func NewDeleteRouteTableUnauthorized() *DeleteRouteTableUnauthorized {
	return &DeleteRouteTableUnauthorized{}
}

/*DeleteRouteTableUnauthorized handles this case with default header values.

The HTTP 401 response (Unauthorized).
*/
type DeleteRouteTableUnauthorized struct {
}

func (o *DeleteRouteTableUnauthorized) Error() string {
	return fmt.Sprintf("[POST /DeleteRouteTable][%d] deleteRouteTableUnauthorized ", 401)
}

func (o *DeleteRouteTableUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewDeleteRouteTableInternalServerError creates a DeleteRouteTableInternalServerError with default headers values
func NewDeleteRouteTableInternalServerError() *DeleteRouteTableInternalServerError {
	return &DeleteRouteTableInternalServerError{}
}

/*DeleteRouteTableInternalServerError handles this case with default header values.

The HTTP 500 response (Internal Server Error).
*/
type DeleteRouteTableInternalServerError struct {
}

func (o *DeleteRouteTableInternalServerError) Error() string {
	return fmt.Sprintf("[POST /DeleteRouteTable][%d] deleteRouteTableInternalServerError ", 500)
}

func (o *DeleteRouteTableInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
