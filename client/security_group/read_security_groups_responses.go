// Code generated by go-swagger; DO NOT EDIT.

package security_group

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"
)

// ReadSecurityGroupsReader is a Reader for the ReadSecurityGroups structure.
type ReadSecurityGroupsReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *ReadSecurityGroupsReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewReadSecurityGroupsOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewReadSecurityGroupsBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewReadSecurityGroupsUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewReadSecurityGroupsInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewReadSecurityGroupsOK creates a ReadSecurityGroupsOK with default headers values
func NewReadSecurityGroupsOK() *ReadSecurityGroupsOK {
	return &ReadSecurityGroupsOK{}
}

/*ReadSecurityGroupsOK handles this case with default header values.

The HTTP 200 response (OK).
*/
type ReadSecurityGroupsOK struct {
}

func (o *ReadSecurityGroupsOK) Error() string {
	return fmt.Sprintf("[POST /ReadSecurityGroups][%d] readSecurityGroupsOK ", 200)
}

func (o *ReadSecurityGroupsOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewReadSecurityGroupsBadRequest creates a ReadSecurityGroupsBadRequest with default headers values
func NewReadSecurityGroupsBadRequest() *ReadSecurityGroupsBadRequest {
	return &ReadSecurityGroupsBadRequest{}
}

/*ReadSecurityGroupsBadRequest handles this case with default header values.

The HTTP 400 response (Bad Request).
*/
type ReadSecurityGroupsBadRequest struct {
}

func (o *ReadSecurityGroupsBadRequest) Error() string {
	return fmt.Sprintf("[POST /ReadSecurityGroups][%d] readSecurityGroupsBadRequest ", 400)
}

func (o *ReadSecurityGroupsBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewReadSecurityGroupsUnauthorized creates a ReadSecurityGroupsUnauthorized with default headers values
func NewReadSecurityGroupsUnauthorized() *ReadSecurityGroupsUnauthorized {
	return &ReadSecurityGroupsUnauthorized{}
}

/*ReadSecurityGroupsUnauthorized handles this case with default header values.

The HTTP 401 response (Unauthorized).
*/
type ReadSecurityGroupsUnauthorized struct {
}

func (o *ReadSecurityGroupsUnauthorized) Error() string {
	return fmt.Sprintf("[POST /ReadSecurityGroups][%d] readSecurityGroupsUnauthorized ", 401)
}

func (o *ReadSecurityGroupsUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewReadSecurityGroupsInternalServerError creates a ReadSecurityGroupsInternalServerError with default headers values
func NewReadSecurityGroupsInternalServerError() *ReadSecurityGroupsInternalServerError {
	return &ReadSecurityGroupsInternalServerError{}
}

/*ReadSecurityGroupsInternalServerError handles this case with default header values.

The HTTP 500 response (Internal Server Error).
*/
type ReadSecurityGroupsInternalServerError struct {
}

func (o *ReadSecurityGroupsInternalServerError) Error() string {
	return fmt.Sprintf("[POST /ReadSecurityGroups][%d] readSecurityGroupsInternalServerError ", 500)
}

func (o *ReadSecurityGroupsInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
