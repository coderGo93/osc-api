// Code generated by go-swagger; DO NOT EDIT.

package net

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"
)

// DeleteNetReader is a Reader for the DeleteNet structure.
type DeleteNetReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *DeleteNetReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewDeleteNetOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewDeleteNetBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewDeleteNetUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewDeleteNetInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewDeleteNetOK creates a DeleteNetOK with default headers values
func NewDeleteNetOK() *DeleteNetOK {
	return &DeleteNetOK{}
}

/*DeleteNetOK handles this case with default header values.

The HTTP 200 response (OK).
*/
type DeleteNetOK struct {
}

func (o *DeleteNetOK) Error() string {
	return fmt.Sprintf("[POST /DeleteNet][%d] deleteNetOK ", 200)
}

func (o *DeleteNetOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewDeleteNetBadRequest creates a DeleteNetBadRequest with default headers values
func NewDeleteNetBadRequest() *DeleteNetBadRequest {
	return &DeleteNetBadRequest{}
}

/*DeleteNetBadRequest handles this case with default header values.

The HTTP 400 response (Bad Request).
*/
type DeleteNetBadRequest struct {
}

func (o *DeleteNetBadRequest) Error() string {
	return fmt.Sprintf("[POST /DeleteNet][%d] deleteNetBadRequest ", 400)
}

func (o *DeleteNetBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewDeleteNetUnauthorized creates a DeleteNetUnauthorized with default headers values
func NewDeleteNetUnauthorized() *DeleteNetUnauthorized {
	return &DeleteNetUnauthorized{}
}

/*DeleteNetUnauthorized handles this case with default header values.

The HTTP 401 response (Unauthorized).
*/
type DeleteNetUnauthorized struct {
}

func (o *DeleteNetUnauthorized) Error() string {
	return fmt.Sprintf("[POST /DeleteNet][%d] deleteNetUnauthorized ", 401)
}

func (o *DeleteNetUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewDeleteNetInternalServerError creates a DeleteNetInternalServerError with default headers values
func NewDeleteNetInternalServerError() *DeleteNetInternalServerError {
	return &DeleteNetInternalServerError{}
}

/*DeleteNetInternalServerError handles this case with default header values.

The HTTP 500 response (Internal Server Error).
*/
type DeleteNetInternalServerError struct {
}

func (o *DeleteNetInternalServerError) Error() string {
	return fmt.Sprintf("[POST /DeleteNet][%d] deleteNetInternalServerError ", 500)
}

func (o *DeleteNetInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
