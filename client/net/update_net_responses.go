// Code generated by go-swagger; DO NOT EDIT.

package net

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"
)

// UpdateNetReader is a Reader for the UpdateNet structure.
type UpdateNetReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *UpdateNetReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewUpdateNetOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewUpdateNetBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewUpdateNetUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewUpdateNetInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewUpdateNetOK creates a UpdateNetOK with default headers values
func NewUpdateNetOK() *UpdateNetOK {
	return &UpdateNetOK{}
}

/*UpdateNetOK handles this case with default header values.

The HTTP 200 response (OK).
*/
type UpdateNetOK struct {
}

func (o *UpdateNetOK) Error() string {
	return fmt.Sprintf("[POST /UpdateNet][%d] updateNetOK ", 200)
}

func (o *UpdateNetOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewUpdateNetBadRequest creates a UpdateNetBadRequest with default headers values
func NewUpdateNetBadRequest() *UpdateNetBadRequest {
	return &UpdateNetBadRequest{}
}

/*UpdateNetBadRequest handles this case with default header values.

The HTTP 400 response (Bad Request).
*/
type UpdateNetBadRequest struct {
}

func (o *UpdateNetBadRequest) Error() string {
	return fmt.Sprintf("[POST /UpdateNet][%d] updateNetBadRequest ", 400)
}

func (o *UpdateNetBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewUpdateNetUnauthorized creates a UpdateNetUnauthorized with default headers values
func NewUpdateNetUnauthorized() *UpdateNetUnauthorized {
	return &UpdateNetUnauthorized{}
}

/*UpdateNetUnauthorized handles this case with default header values.

The HTTP 401 response (Unauthorized).
*/
type UpdateNetUnauthorized struct {
}

func (o *UpdateNetUnauthorized) Error() string {
	return fmt.Sprintf("[POST /UpdateNet][%d] updateNetUnauthorized ", 401)
}

func (o *UpdateNetUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewUpdateNetInternalServerError creates a UpdateNetInternalServerError with default headers values
func NewUpdateNetInternalServerError() *UpdateNetInternalServerError {
	return &UpdateNetInternalServerError{}
}

/*UpdateNetInternalServerError handles this case with default header values.

The HTTP 500 response (Internal Server Error).
*/
type UpdateNetInternalServerError struct {
}

func (o *UpdateNetInternalServerError) Error() string {
	return fmt.Sprintf("[POST /UpdateNet][%d] updateNetInternalServerError ", 500)
}

func (o *UpdateNetInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
