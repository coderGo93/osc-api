// Code generated by go-swagger; DO NOT EDIT.

package net

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"
)

// ReadNetsReader is a Reader for the ReadNets structure.
type ReadNetsReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *ReadNetsReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewReadNetsOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewReadNetsBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewReadNetsUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewReadNetsInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewReadNetsOK creates a ReadNetsOK with default headers values
func NewReadNetsOK() *ReadNetsOK {
	return &ReadNetsOK{}
}

/*ReadNetsOK handles this case with default header values.

The HTTP 200 response (OK).
*/
type ReadNetsOK struct {
}

func (o *ReadNetsOK) Error() string {
	return fmt.Sprintf("[POST /ReadNets][%d] readNetsOK ", 200)
}

func (o *ReadNetsOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewReadNetsBadRequest creates a ReadNetsBadRequest with default headers values
func NewReadNetsBadRequest() *ReadNetsBadRequest {
	return &ReadNetsBadRequest{}
}

/*ReadNetsBadRequest handles this case with default header values.

The HTTP 400 response (Bad Request).
*/
type ReadNetsBadRequest struct {
}

func (o *ReadNetsBadRequest) Error() string {
	return fmt.Sprintf("[POST /ReadNets][%d] readNetsBadRequest ", 400)
}

func (o *ReadNetsBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewReadNetsUnauthorized creates a ReadNetsUnauthorized with default headers values
func NewReadNetsUnauthorized() *ReadNetsUnauthorized {
	return &ReadNetsUnauthorized{}
}

/*ReadNetsUnauthorized handles this case with default header values.

The HTTP 401 response (Unauthorized).
*/
type ReadNetsUnauthorized struct {
}

func (o *ReadNetsUnauthorized) Error() string {
	return fmt.Sprintf("[POST /ReadNets][%d] readNetsUnauthorized ", 401)
}

func (o *ReadNetsUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewReadNetsInternalServerError creates a ReadNetsInternalServerError with default headers values
func NewReadNetsInternalServerError() *ReadNetsInternalServerError {
	return &ReadNetsInternalServerError{}
}

/*ReadNetsInternalServerError handles this case with default header values.

The HTTP 500 response (Internal Server Error).
*/
type ReadNetsInternalServerError struct {
}

func (o *ReadNetsInternalServerError) Error() string {
	return fmt.Sprintf("[POST /ReadNets][%d] readNetsInternalServerError ", 500)
}

func (o *ReadNetsInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
