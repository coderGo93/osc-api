// Code generated by go-swagger; DO NOT EDIT.

package internet_service

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"
)

// ReadInternetServicesReader is a Reader for the ReadInternetServices structure.
type ReadInternetServicesReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *ReadInternetServicesReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewReadInternetServicesOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewReadInternetServicesBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewReadInternetServicesUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewReadInternetServicesInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewReadInternetServicesOK creates a ReadInternetServicesOK with default headers values
func NewReadInternetServicesOK() *ReadInternetServicesOK {
	return &ReadInternetServicesOK{}
}

/*ReadInternetServicesOK handles this case with default header values.

The HTTP 200 response (OK).
*/
type ReadInternetServicesOK struct {
}

func (o *ReadInternetServicesOK) Error() string {
	return fmt.Sprintf("[POST /ReadInternetServices][%d] readInternetServicesOK ", 200)
}

func (o *ReadInternetServicesOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewReadInternetServicesBadRequest creates a ReadInternetServicesBadRequest with default headers values
func NewReadInternetServicesBadRequest() *ReadInternetServicesBadRequest {
	return &ReadInternetServicesBadRequest{}
}

/*ReadInternetServicesBadRequest handles this case with default header values.

The HTTP 400 response (Bad Request).
*/
type ReadInternetServicesBadRequest struct {
}

func (o *ReadInternetServicesBadRequest) Error() string {
	return fmt.Sprintf("[POST /ReadInternetServices][%d] readInternetServicesBadRequest ", 400)
}

func (o *ReadInternetServicesBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewReadInternetServicesUnauthorized creates a ReadInternetServicesUnauthorized with default headers values
func NewReadInternetServicesUnauthorized() *ReadInternetServicesUnauthorized {
	return &ReadInternetServicesUnauthorized{}
}

/*ReadInternetServicesUnauthorized handles this case with default header values.

The HTTP 401 response (Unauthorized).
*/
type ReadInternetServicesUnauthorized struct {
}

func (o *ReadInternetServicesUnauthorized) Error() string {
	return fmt.Sprintf("[POST /ReadInternetServices][%d] readInternetServicesUnauthorized ", 401)
}

func (o *ReadInternetServicesUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewReadInternetServicesInternalServerError creates a ReadInternetServicesInternalServerError with default headers values
func NewReadInternetServicesInternalServerError() *ReadInternetServicesInternalServerError {
	return &ReadInternetServicesInternalServerError{}
}

/*ReadInternetServicesInternalServerError handles this case with default header values.

The HTTP 500 response (Internal Server Error).
*/
type ReadInternetServicesInternalServerError struct {
}

func (o *ReadInternetServicesInternalServerError) Error() string {
	return fmt.Sprintf("[POST /ReadInternetServices][%d] readInternetServicesInternalServerError ", 500)
}

func (o *ReadInternetServicesInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
