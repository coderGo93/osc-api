// Code generated by go-swagger; DO NOT EDIT.

package volume

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"
)

// LinkVolumeReader is a Reader for the LinkVolume structure.
type LinkVolumeReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *LinkVolumeReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewLinkVolumeOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewLinkVolumeBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewLinkVolumeUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewLinkVolumeInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewLinkVolumeOK creates a LinkVolumeOK with default headers values
func NewLinkVolumeOK() *LinkVolumeOK {
	return &LinkVolumeOK{}
}

/*LinkVolumeOK handles this case with default header values.

The HTTP 200 response (OK).
*/
type LinkVolumeOK struct {
}

func (o *LinkVolumeOK) Error() string {
	return fmt.Sprintf("[POST /LinkVolume][%d] linkVolumeOK ", 200)
}

func (o *LinkVolumeOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewLinkVolumeBadRequest creates a LinkVolumeBadRequest with default headers values
func NewLinkVolumeBadRequest() *LinkVolumeBadRequest {
	return &LinkVolumeBadRequest{}
}

/*LinkVolumeBadRequest handles this case with default header values.

The HTTP 400 response (Bad Request).
*/
type LinkVolumeBadRequest struct {
}

func (o *LinkVolumeBadRequest) Error() string {
	return fmt.Sprintf("[POST /LinkVolume][%d] linkVolumeBadRequest ", 400)
}

func (o *LinkVolumeBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewLinkVolumeUnauthorized creates a LinkVolumeUnauthorized with default headers values
func NewLinkVolumeUnauthorized() *LinkVolumeUnauthorized {
	return &LinkVolumeUnauthorized{}
}

/*LinkVolumeUnauthorized handles this case with default header values.

The HTTP 401 response (Unauthorized).
*/
type LinkVolumeUnauthorized struct {
}

func (o *LinkVolumeUnauthorized) Error() string {
	return fmt.Sprintf("[POST /LinkVolume][%d] linkVolumeUnauthorized ", 401)
}

func (o *LinkVolumeUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewLinkVolumeInternalServerError creates a LinkVolumeInternalServerError with default headers values
func NewLinkVolumeInternalServerError() *LinkVolumeInternalServerError {
	return &LinkVolumeInternalServerError{}
}

/*LinkVolumeInternalServerError handles this case with default header values.

The HTTP 500 response (Internal Server Error).
*/
type LinkVolumeInternalServerError struct {
}

func (o *LinkVolumeInternalServerError) Error() string {
	return fmt.Sprintf("[POST /LinkVolume][%d] linkVolumeInternalServerError ", 500)
}

func (o *LinkVolumeInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
