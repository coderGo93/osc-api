// Code generated by go-swagger; DO NOT EDIT.

package nic

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"
)

// UnlinkNicReader is a Reader for the UnlinkNic structure.
type UnlinkNicReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *UnlinkNicReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewUnlinkNicOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewUnlinkNicBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewUnlinkNicUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewUnlinkNicInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewUnlinkNicOK creates a UnlinkNicOK with default headers values
func NewUnlinkNicOK() *UnlinkNicOK {
	return &UnlinkNicOK{}
}

/*UnlinkNicOK handles this case with default header values.

The HTTP 200 response (OK).
*/
type UnlinkNicOK struct {
}

func (o *UnlinkNicOK) Error() string {
	return fmt.Sprintf("[POST /UnlinkNic][%d] unlinkNicOK ", 200)
}

func (o *UnlinkNicOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewUnlinkNicBadRequest creates a UnlinkNicBadRequest with default headers values
func NewUnlinkNicBadRequest() *UnlinkNicBadRequest {
	return &UnlinkNicBadRequest{}
}

/*UnlinkNicBadRequest handles this case with default header values.

The HTTP 400 response (Bad Request).
*/
type UnlinkNicBadRequest struct {
}

func (o *UnlinkNicBadRequest) Error() string {
	return fmt.Sprintf("[POST /UnlinkNic][%d] unlinkNicBadRequest ", 400)
}

func (o *UnlinkNicBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewUnlinkNicUnauthorized creates a UnlinkNicUnauthorized with default headers values
func NewUnlinkNicUnauthorized() *UnlinkNicUnauthorized {
	return &UnlinkNicUnauthorized{}
}

/*UnlinkNicUnauthorized handles this case with default header values.

The HTTP 401 response (Unauthorized).
*/
type UnlinkNicUnauthorized struct {
}

func (o *UnlinkNicUnauthorized) Error() string {
	return fmt.Sprintf("[POST /UnlinkNic][%d] unlinkNicUnauthorized ", 401)
}

func (o *UnlinkNicUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewUnlinkNicInternalServerError creates a UnlinkNicInternalServerError with default headers values
func NewUnlinkNicInternalServerError() *UnlinkNicInternalServerError {
	return &UnlinkNicInternalServerError{}
}

/*UnlinkNicInternalServerError handles this case with default header values.

The HTTP 500 response (Internal Server Error).
*/
type UnlinkNicInternalServerError struct {
}

func (o *UnlinkNicInternalServerError) Error() string {
	return fmt.Sprintf("[POST /UnlinkNic][%d] unlinkNicInternalServerError ", 500)
}

func (o *UnlinkNicInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
