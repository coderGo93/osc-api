// Code generated by go-swagger; DO NOT EDIT.

package nic

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"
)

// LinkPrivateIpsReader is a Reader for the LinkPrivateIps structure.
type LinkPrivateIpsReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *LinkPrivateIpsReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewLinkPrivateIpsOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewLinkPrivateIpsBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewLinkPrivateIpsUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewLinkPrivateIpsInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewLinkPrivateIpsOK creates a LinkPrivateIpsOK with default headers values
func NewLinkPrivateIpsOK() *LinkPrivateIpsOK {
	return &LinkPrivateIpsOK{}
}

/*LinkPrivateIpsOK handles this case with default header values.

The HTTP 200 response (OK).
*/
type LinkPrivateIpsOK struct {
}

func (o *LinkPrivateIpsOK) Error() string {
	return fmt.Sprintf("[POST /LinkPrivateIps][%d] linkPrivateIpsOK ", 200)
}

func (o *LinkPrivateIpsOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewLinkPrivateIpsBadRequest creates a LinkPrivateIpsBadRequest with default headers values
func NewLinkPrivateIpsBadRequest() *LinkPrivateIpsBadRequest {
	return &LinkPrivateIpsBadRequest{}
}

/*LinkPrivateIpsBadRequest handles this case with default header values.

The HTTP 400 response (Bad Request).
*/
type LinkPrivateIpsBadRequest struct {
}

func (o *LinkPrivateIpsBadRequest) Error() string {
	return fmt.Sprintf("[POST /LinkPrivateIps][%d] linkPrivateIpsBadRequest ", 400)
}

func (o *LinkPrivateIpsBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewLinkPrivateIpsUnauthorized creates a LinkPrivateIpsUnauthorized with default headers values
func NewLinkPrivateIpsUnauthorized() *LinkPrivateIpsUnauthorized {
	return &LinkPrivateIpsUnauthorized{}
}

/*LinkPrivateIpsUnauthorized handles this case with default header values.

The HTTP 401 response (Unauthorized).
*/
type LinkPrivateIpsUnauthorized struct {
}

func (o *LinkPrivateIpsUnauthorized) Error() string {
	return fmt.Sprintf("[POST /LinkPrivateIps][%d] linkPrivateIpsUnauthorized ", 401)
}

func (o *LinkPrivateIpsUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewLinkPrivateIpsInternalServerError creates a LinkPrivateIpsInternalServerError with default headers values
func NewLinkPrivateIpsInternalServerError() *LinkPrivateIpsInternalServerError {
	return &LinkPrivateIpsInternalServerError{}
}

/*LinkPrivateIpsInternalServerError handles this case with default header values.

The HTTP 500 response (Internal Server Error).
*/
type LinkPrivateIpsInternalServerError struct {
}

func (o *LinkPrivateIpsInternalServerError) Error() string {
	return fmt.Sprintf("[POST /LinkPrivateIps][%d] linkPrivateIpsInternalServerError ", 500)
}

func (o *LinkPrivateIpsInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
