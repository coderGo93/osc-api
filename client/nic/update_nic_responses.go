// Code generated by go-swagger; DO NOT EDIT.

package nic

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"
)

// UpdateNicReader is a Reader for the UpdateNic structure.
type UpdateNicReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *UpdateNicReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewUpdateNicOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewUpdateNicBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewUpdateNicUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewUpdateNicInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewUpdateNicOK creates a UpdateNicOK with default headers values
func NewUpdateNicOK() *UpdateNicOK {
	return &UpdateNicOK{}
}

/*UpdateNicOK handles this case with default header values.

The HTTP 200 response (OK).
*/
type UpdateNicOK struct {
}

func (o *UpdateNicOK) Error() string {
	return fmt.Sprintf("[POST /UpdateNic][%d] updateNicOK ", 200)
}

func (o *UpdateNicOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewUpdateNicBadRequest creates a UpdateNicBadRequest with default headers values
func NewUpdateNicBadRequest() *UpdateNicBadRequest {
	return &UpdateNicBadRequest{}
}

/*UpdateNicBadRequest handles this case with default header values.

The HTTP 400 response (Bad Request).
*/
type UpdateNicBadRequest struct {
}

func (o *UpdateNicBadRequest) Error() string {
	return fmt.Sprintf("[POST /UpdateNic][%d] updateNicBadRequest ", 400)
}

func (o *UpdateNicBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewUpdateNicUnauthorized creates a UpdateNicUnauthorized with default headers values
func NewUpdateNicUnauthorized() *UpdateNicUnauthorized {
	return &UpdateNicUnauthorized{}
}

/*UpdateNicUnauthorized handles this case with default header values.

The HTTP 401 response (Unauthorized).
*/
type UpdateNicUnauthorized struct {
}

func (o *UpdateNicUnauthorized) Error() string {
	return fmt.Sprintf("[POST /UpdateNic][%d] updateNicUnauthorized ", 401)
}

func (o *UpdateNicUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewUpdateNicInternalServerError creates a UpdateNicInternalServerError with default headers values
func NewUpdateNicInternalServerError() *UpdateNicInternalServerError {
	return &UpdateNicInternalServerError{}
}

/*UpdateNicInternalServerError handles this case with default header values.

The HTTP 500 response (Internal Server Error).
*/
type UpdateNicInternalServerError struct {
}

func (o *UpdateNicInternalServerError) Error() string {
	return fmt.Sprintf("[POST /UpdateNic][%d] updateNicInternalServerError ", 500)
}

func (o *UpdateNicInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
