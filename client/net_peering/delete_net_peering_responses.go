// Code generated by go-swagger; DO NOT EDIT.

package net_peering

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"
)

// DeleteNetPeeringReader is a Reader for the DeleteNetPeering structure.
type DeleteNetPeeringReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *DeleteNetPeeringReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewDeleteNetPeeringOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewDeleteNetPeeringBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewDeleteNetPeeringUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 409:
		result := NewDeleteNetPeeringConflict()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewDeleteNetPeeringInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewDeleteNetPeeringOK creates a DeleteNetPeeringOK with default headers values
func NewDeleteNetPeeringOK() *DeleteNetPeeringOK {
	return &DeleteNetPeeringOK{}
}

/*DeleteNetPeeringOK handles this case with default header values.

The HTTP 200 response (OK).
*/
type DeleteNetPeeringOK struct {
}

func (o *DeleteNetPeeringOK) Error() string {
	return fmt.Sprintf("[POST /DeleteNetPeering][%d] deleteNetPeeringOK ", 200)
}

func (o *DeleteNetPeeringOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewDeleteNetPeeringBadRequest creates a DeleteNetPeeringBadRequest with default headers values
func NewDeleteNetPeeringBadRequest() *DeleteNetPeeringBadRequest {
	return &DeleteNetPeeringBadRequest{}
}

/*DeleteNetPeeringBadRequest handles this case with default header values.

The HTTP 400 response (Bad Request).
*/
type DeleteNetPeeringBadRequest struct {
}

func (o *DeleteNetPeeringBadRequest) Error() string {
	return fmt.Sprintf("[POST /DeleteNetPeering][%d] deleteNetPeeringBadRequest ", 400)
}

func (o *DeleteNetPeeringBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewDeleteNetPeeringUnauthorized creates a DeleteNetPeeringUnauthorized with default headers values
func NewDeleteNetPeeringUnauthorized() *DeleteNetPeeringUnauthorized {
	return &DeleteNetPeeringUnauthorized{}
}

/*DeleteNetPeeringUnauthorized handles this case with default header values.

The HTTP 401 response (Unauthorized).
*/
type DeleteNetPeeringUnauthorized struct {
}

func (o *DeleteNetPeeringUnauthorized) Error() string {
	return fmt.Sprintf("[POST /DeleteNetPeering][%d] deleteNetPeeringUnauthorized ", 401)
}

func (o *DeleteNetPeeringUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewDeleteNetPeeringConflict creates a DeleteNetPeeringConflict with default headers values
func NewDeleteNetPeeringConflict() *DeleteNetPeeringConflict {
	return &DeleteNetPeeringConflict{}
}

/*DeleteNetPeeringConflict handles this case with default header values.

The HTTP 409 response (Conflict).
*/
type DeleteNetPeeringConflict struct {
}

func (o *DeleteNetPeeringConflict) Error() string {
	return fmt.Sprintf("[POST /DeleteNetPeering][%d] deleteNetPeeringConflict ", 409)
}

func (o *DeleteNetPeeringConflict) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewDeleteNetPeeringInternalServerError creates a DeleteNetPeeringInternalServerError with default headers values
func NewDeleteNetPeeringInternalServerError() *DeleteNetPeeringInternalServerError {
	return &DeleteNetPeeringInternalServerError{}
}

/*DeleteNetPeeringInternalServerError handles this case with default header values.

The HTTP 500 response (Internal Server Error).
*/
type DeleteNetPeeringInternalServerError struct {
}

func (o *DeleteNetPeeringInternalServerError) Error() string {
	return fmt.Sprintf("[POST /DeleteNetPeering][%d] deleteNetPeeringInternalServerError ", 500)
}

func (o *DeleteNetPeeringInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
