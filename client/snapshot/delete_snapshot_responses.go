// Code generated by go-swagger; DO NOT EDIT.

package snapshot

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"
)

// DeleteSnapshotReader is a Reader for the DeleteSnapshot structure.
type DeleteSnapshotReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *DeleteSnapshotReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewDeleteSnapshotOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewDeleteSnapshotBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewDeleteSnapshotUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewDeleteSnapshotInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewDeleteSnapshotOK creates a DeleteSnapshotOK with default headers values
func NewDeleteSnapshotOK() *DeleteSnapshotOK {
	return &DeleteSnapshotOK{}
}

/*DeleteSnapshotOK handles this case with default header values.

The HTTP 200 response (OK).
*/
type DeleteSnapshotOK struct {
}

func (o *DeleteSnapshotOK) Error() string {
	return fmt.Sprintf("[POST /DeleteSnapshot][%d] deleteSnapshotOK ", 200)
}

func (o *DeleteSnapshotOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewDeleteSnapshotBadRequest creates a DeleteSnapshotBadRequest with default headers values
func NewDeleteSnapshotBadRequest() *DeleteSnapshotBadRequest {
	return &DeleteSnapshotBadRequest{}
}

/*DeleteSnapshotBadRequest handles this case with default header values.

The HTTP 400 response (Bad Request).
*/
type DeleteSnapshotBadRequest struct {
}

func (o *DeleteSnapshotBadRequest) Error() string {
	return fmt.Sprintf("[POST /DeleteSnapshot][%d] deleteSnapshotBadRequest ", 400)
}

func (o *DeleteSnapshotBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewDeleteSnapshotUnauthorized creates a DeleteSnapshotUnauthorized with default headers values
func NewDeleteSnapshotUnauthorized() *DeleteSnapshotUnauthorized {
	return &DeleteSnapshotUnauthorized{}
}

/*DeleteSnapshotUnauthorized handles this case with default header values.

The HTTP 401 response (Unauthorized).
*/
type DeleteSnapshotUnauthorized struct {
}

func (o *DeleteSnapshotUnauthorized) Error() string {
	return fmt.Sprintf("[POST /DeleteSnapshot][%d] deleteSnapshotUnauthorized ", 401)
}

func (o *DeleteSnapshotUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewDeleteSnapshotInternalServerError creates a DeleteSnapshotInternalServerError with default headers values
func NewDeleteSnapshotInternalServerError() *DeleteSnapshotInternalServerError {
	return &DeleteSnapshotInternalServerError{}
}

/*DeleteSnapshotInternalServerError handles this case with default header values.

The HTTP 500 response (Internal Server Error).
*/
type DeleteSnapshotInternalServerError struct {
}

func (o *DeleteSnapshotInternalServerError) Error() string {
	return fmt.Sprintf("[POST /DeleteSnapshot][%d] deleteSnapshotInternalServerError ", 500)
}

func (o *DeleteSnapshotInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
