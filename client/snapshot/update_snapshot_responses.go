// Code generated by go-swagger; DO NOT EDIT.

package snapshot

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"
)

// UpdateSnapshotReader is a Reader for the UpdateSnapshot structure.
type UpdateSnapshotReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *UpdateSnapshotReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewUpdateSnapshotOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewUpdateSnapshotBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewUpdateSnapshotUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewUpdateSnapshotInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewUpdateSnapshotOK creates a UpdateSnapshotOK with default headers values
func NewUpdateSnapshotOK() *UpdateSnapshotOK {
	return &UpdateSnapshotOK{}
}

/*UpdateSnapshotOK handles this case with default header values.

The HTTP 200 response (OK).
*/
type UpdateSnapshotOK struct {
}

func (o *UpdateSnapshotOK) Error() string {
	return fmt.Sprintf("[POST /UpdateSnapshot][%d] updateSnapshotOK ", 200)
}

func (o *UpdateSnapshotOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewUpdateSnapshotBadRequest creates a UpdateSnapshotBadRequest with default headers values
func NewUpdateSnapshotBadRequest() *UpdateSnapshotBadRequest {
	return &UpdateSnapshotBadRequest{}
}

/*UpdateSnapshotBadRequest handles this case with default header values.

The HTTP 400 response (Bad Request).
*/
type UpdateSnapshotBadRequest struct {
}

func (o *UpdateSnapshotBadRequest) Error() string {
	return fmt.Sprintf("[POST /UpdateSnapshot][%d] updateSnapshotBadRequest ", 400)
}

func (o *UpdateSnapshotBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewUpdateSnapshotUnauthorized creates a UpdateSnapshotUnauthorized with default headers values
func NewUpdateSnapshotUnauthorized() *UpdateSnapshotUnauthorized {
	return &UpdateSnapshotUnauthorized{}
}

/*UpdateSnapshotUnauthorized handles this case with default header values.

The HTTP 401 response (Unauthorized).
*/
type UpdateSnapshotUnauthorized struct {
}

func (o *UpdateSnapshotUnauthorized) Error() string {
	return fmt.Sprintf("[POST /UpdateSnapshot][%d] updateSnapshotUnauthorized ", 401)
}

func (o *UpdateSnapshotUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewUpdateSnapshotInternalServerError creates a UpdateSnapshotInternalServerError with default headers values
func NewUpdateSnapshotInternalServerError() *UpdateSnapshotInternalServerError {
	return &UpdateSnapshotInternalServerError{}
}

/*UpdateSnapshotInternalServerError handles this case with default header values.

The HTTP 500 response (Internal Server Error).
*/
type UpdateSnapshotInternalServerError struct {
}

func (o *UpdateSnapshotInternalServerError) Error() string {
	return fmt.Sprintf("[POST /UpdateSnapshot][%d] updateSnapshotInternalServerError ", 500)
}

func (o *UpdateSnapshotInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
