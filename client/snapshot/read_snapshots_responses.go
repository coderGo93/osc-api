// Code generated by go-swagger; DO NOT EDIT.

package snapshot

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"
)

// ReadSnapshotsReader is a Reader for the ReadSnapshots structure.
type ReadSnapshotsReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *ReadSnapshotsReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewReadSnapshotsOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewReadSnapshotsBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewReadSnapshotsUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewReadSnapshotsInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewReadSnapshotsOK creates a ReadSnapshotsOK with default headers values
func NewReadSnapshotsOK() *ReadSnapshotsOK {
	return &ReadSnapshotsOK{}
}

/*ReadSnapshotsOK handles this case with default header values.

The HTTP 200 response (OK).
*/
type ReadSnapshotsOK struct {
}

func (o *ReadSnapshotsOK) Error() string {
	return fmt.Sprintf("[POST /ReadSnapshots][%d] readSnapshotsOK ", 200)
}

func (o *ReadSnapshotsOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewReadSnapshotsBadRequest creates a ReadSnapshotsBadRequest with default headers values
func NewReadSnapshotsBadRequest() *ReadSnapshotsBadRequest {
	return &ReadSnapshotsBadRequest{}
}

/*ReadSnapshotsBadRequest handles this case with default header values.

The HTTP 400 response (Bad Request).
*/
type ReadSnapshotsBadRequest struct {
}

func (o *ReadSnapshotsBadRequest) Error() string {
	return fmt.Sprintf("[POST /ReadSnapshots][%d] readSnapshotsBadRequest ", 400)
}

func (o *ReadSnapshotsBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewReadSnapshotsUnauthorized creates a ReadSnapshotsUnauthorized with default headers values
func NewReadSnapshotsUnauthorized() *ReadSnapshotsUnauthorized {
	return &ReadSnapshotsUnauthorized{}
}

/*ReadSnapshotsUnauthorized handles this case with default header values.

The HTTP 401 response (Unauthorized).
*/
type ReadSnapshotsUnauthorized struct {
}

func (o *ReadSnapshotsUnauthorized) Error() string {
	return fmt.Sprintf("[POST /ReadSnapshots][%d] readSnapshotsUnauthorized ", 401)
}

func (o *ReadSnapshotsUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewReadSnapshotsInternalServerError creates a ReadSnapshotsInternalServerError with default headers values
func NewReadSnapshotsInternalServerError() *ReadSnapshotsInternalServerError {
	return &ReadSnapshotsInternalServerError{}
}

/*ReadSnapshotsInternalServerError handles this case with default header values.

The HTTP 500 response (Internal Server Error).
*/
type ReadSnapshotsInternalServerError struct {
}

func (o *ReadSnapshotsInternalServerError) Error() string {
	return fmt.Sprintf("[POST /ReadSnapshots][%d] readSnapshotsInternalServerError ", 500)
}

func (o *ReadSnapshotsInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
