// Code generated by go-swagger; DO NOT EDIT.

package snapshot

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"
)

// CreateSnapshotReader is a Reader for the CreateSnapshot structure.
type CreateSnapshotReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *CreateSnapshotReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewCreateSnapshotOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewCreateSnapshotBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewCreateSnapshotUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewCreateSnapshotInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewCreateSnapshotOK creates a CreateSnapshotOK with default headers values
func NewCreateSnapshotOK() *CreateSnapshotOK {
	return &CreateSnapshotOK{}
}

/*CreateSnapshotOK handles this case with default header values.

The HTTP 200 response (OK).
*/
type CreateSnapshotOK struct {
}

func (o *CreateSnapshotOK) Error() string {
	return fmt.Sprintf("[POST /CreateSnapshot][%d] createSnapshotOK ", 200)
}

func (o *CreateSnapshotOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewCreateSnapshotBadRequest creates a CreateSnapshotBadRequest with default headers values
func NewCreateSnapshotBadRequest() *CreateSnapshotBadRequest {
	return &CreateSnapshotBadRequest{}
}

/*CreateSnapshotBadRequest handles this case with default header values.

The HTTP 400 response (Bad Request).
*/
type CreateSnapshotBadRequest struct {
}

func (o *CreateSnapshotBadRequest) Error() string {
	return fmt.Sprintf("[POST /CreateSnapshot][%d] createSnapshotBadRequest ", 400)
}

func (o *CreateSnapshotBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewCreateSnapshotUnauthorized creates a CreateSnapshotUnauthorized with default headers values
func NewCreateSnapshotUnauthorized() *CreateSnapshotUnauthorized {
	return &CreateSnapshotUnauthorized{}
}

/*CreateSnapshotUnauthorized handles this case with default header values.

The HTTP 401 response (Unauthorized).
*/
type CreateSnapshotUnauthorized struct {
}

func (o *CreateSnapshotUnauthorized) Error() string {
	return fmt.Sprintf("[POST /CreateSnapshot][%d] createSnapshotUnauthorized ", 401)
}

func (o *CreateSnapshotUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewCreateSnapshotInternalServerError creates a CreateSnapshotInternalServerError with default headers values
func NewCreateSnapshotInternalServerError() *CreateSnapshotInternalServerError {
	return &CreateSnapshotInternalServerError{}
}

/*CreateSnapshotInternalServerError handles this case with default header values.

The HTTP 500 response (Internal Server Error).
*/
type CreateSnapshotInternalServerError struct {
}

func (o *CreateSnapshotInternalServerError) Error() string {
	return fmt.Sprintf("[POST /CreateSnapshot][%d] createSnapshotInternalServerError ", 500)
}

func (o *CreateSnapshotInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
