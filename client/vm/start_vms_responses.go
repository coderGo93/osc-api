// Code generated by go-swagger; DO NOT EDIT.

package vm

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"
)

// StartVmsReader is a Reader for the StartVms structure.
type StartVmsReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *StartVmsReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewStartVmsOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewStartVmsBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewStartVmsUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewStartVmsInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewStartVmsOK creates a StartVmsOK with default headers values
func NewStartVmsOK() *StartVmsOK {
	return &StartVmsOK{}
}

/*StartVmsOK handles this case with default header values.

The HTTP 200 response (OK).
*/
type StartVmsOK struct {
}

func (o *StartVmsOK) Error() string {
	return fmt.Sprintf("[POST /StartVms][%d] startVmsOK ", 200)
}

func (o *StartVmsOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewStartVmsBadRequest creates a StartVmsBadRequest with default headers values
func NewStartVmsBadRequest() *StartVmsBadRequest {
	return &StartVmsBadRequest{}
}

/*StartVmsBadRequest handles this case with default header values.

The HTTP 400 response (Bad Request).
*/
type StartVmsBadRequest struct {
}

func (o *StartVmsBadRequest) Error() string {
	return fmt.Sprintf("[POST /StartVms][%d] startVmsBadRequest ", 400)
}

func (o *StartVmsBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewStartVmsUnauthorized creates a StartVmsUnauthorized with default headers values
func NewStartVmsUnauthorized() *StartVmsUnauthorized {
	return &StartVmsUnauthorized{}
}

/*StartVmsUnauthorized handles this case with default header values.

The HTTP 401 response (Unauthorized).
*/
type StartVmsUnauthorized struct {
}

func (o *StartVmsUnauthorized) Error() string {
	return fmt.Sprintf("[POST /StartVms][%d] startVmsUnauthorized ", 401)
}

func (o *StartVmsUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewStartVmsInternalServerError creates a StartVmsInternalServerError with default headers values
func NewStartVmsInternalServerError() *StartVmsInternalServerError {
	return &StartVmsInternalServerError{}
}

/*StartVmsInternalServerError handles this case with default header values.

The HTTP 500 response (Internal Server Error).
*/
type StartVmsInternalServerError struct {
}

func (o *StartVmsInternalServerError) Error() string {
	return fmt.Sprintf("[POST /StartVms][%d] startVmsInternalServerError ", 500)
}

func (o *StartVmsInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
