// Code generated by go-swagger; DO NOT EDIT.

package vm

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"
)

// ReadVmsStateReader is a Reader for the ReadVmsState structure.
type ReadVmsStateReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *ReadVmsStateReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewReadVmsStateOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewReadVmsStateBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewReadVmsStateUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewReadVmsStateInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewReadVmsStateOK creates a ReadVmsStateOK with default headers values
func NewReadVmsStateOK() *ReadVmsStateOK {
	return &ReadVmsStateOK{}
}

/*ReadVmsStateOK handles this case with default header values.

The HTTP 200 response (OK).
*/
type ReadVmsStateOK struct {
}

func (o *ReadVmsStateOK) Error() string {
	return fmt.Sprintf("[POST /ReadVmsState][%d] readVmsStateOK ", 200)
}

func (o *ReadVmsStateOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewReadVmsStateBadRequest creates a ReadVmsStateBadRequest with default headers values
func NewReadVmsStateBadRequest() *ReadVmsStateBadRequest {
	return &ReadVmsStateBadRequest{}
}

/*ReadVmsStateBadRequest handles this case with default header values.

The HTTP 400 response (Bad Request).
*/
type ReadVmsStateBadRequest struct {
}

func (o *ReadVmsStateBadRequest) Error() string {
	return fmt.Sprintf("[POST /ReadVmsState][%d] readVmsStateBadRequest ", 400)
}

func (o *ReadVmsStateBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewReadVmsStateUnauthorized creates a ReadVmsStateUnauthorized with default headers values
func NewReadVmsStateUnauthorized() *ReadVmsStateUnauthorized {
	return &ReadVmsStateUnauthorized{}
}

/*ReadVmsStateUnauthorized handles this case with default header values.

The HTTP 401 response (Unauthorized).
*/
type ReadVmsStateUnauthorized struct {
}

func (o *ReadVmsStateUnauthorized) Error() string {
	return fmt.Sprintf("[POST /ReadVmsState][%d] readVmsStateUnauthorized ", 401)
}

func (o *ReadVmsStateUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewReadVmsStateInternalServerError creates a ReadVmsStateInternalServerError with default headers values
func NewReadVmsStateInternalServerError() *ReadVmsStateInternalServerError {
	return &ReadVmsStateInternalServerError{}
}

/*ReadVmsStateInternalServerError handles this case with default header values.

The HTTP 500 response (Internal Server Error).
*/
type ReadVmsStateInternalServerError struct {
}

func (o *ReadVmsStateInternalServerError) Error() string {
	return fmt.Sprintf("[POST /ReadVmsState][%d] readVmsStateInternalServerError ", 500)
}

func (o *ReadVmsStateInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
