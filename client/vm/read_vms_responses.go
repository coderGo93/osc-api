// Code generated by go-swagger; DO NOT EDIT.

package vm

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"
)

// ReadVmsReader is a Reader for the ReadVms structure.
type ReadVmsReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *ReadVmsReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewReadVmsOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewReadVmsBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewReadVmsUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewReadVmsInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewReadVmsOK creates a ReadVmsOK with default headers values
func NewReadVmsOK() *ReadVmsOK {
	return &ReadVmsOK{}
}

/*ReadVmsOK handles this case with default header values.

The HTTP 200 response (OK).
*/
type ReadVmsOK struct {
}

func (o *ReadVmsOK) Error() string {
	return fmt.Sprintf("[POST /ReadVms][%d] readVmsOK ", 200)
}

func (o *ReadVmsOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewReadVmsBadRequest creates a ReadVmsBadRequest with default headers values
func NewReadVmsBadRequest() *ReadVmsBadRequest {
	return &ReadVmsBadRequest{}
}

/*ReadVmsBadRequest handles this case with default header values.

The HTTP 400 response (Bad Request).
*/
type ReadVmsBadRequest struct {
}

func (o *ReadVmsBadRequest) Error() string {
	return fmt.Sprintf("[POST /ReadVms][%d] readVmsBadRequest ", 400)
}

func (o *ReadVmsBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewReadVmsUnauthorized creates a ReadVmsUnauthorized with default headers values
func NewReadVmsUnauthorized() *ReadVmsUnauthorized {
	return &ReadVmsUnauthorized{}
}

/*ReadVmsUnauthorized handles this case with default header values.

The HTTP 401 response (Unauthorized).
*/
type ReadVmsUnauthorized struct {
}

func (o *ReadVmsUnauthorized) Error() string {
	return fmt.Sprintf("[POST /ReadVms][%d] readVmsUnauthorized ", 401)
}

func (o *ReadVmsUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewReadVmsInternalServerError creates a ReadVmsInternalServerError with default headers values
func NewReadVmsInternalServerError() *ReadVmsInternalServerError {
	return &ReadVmsInternalServerError{}
}

/*ReadVmsInternalServerError handles this case with default header values.

The HTTP 500 response (Internal Server Error).
*/
type ReadVmsInternalServerError struct {
}

func (o *ReadVmsInternalServerError) Error() string {
	return fmt.Sprintf("[POST /ReadVms][%d] readVmsInternalServerError ", 500)
}

func (o *ReadVmsInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
