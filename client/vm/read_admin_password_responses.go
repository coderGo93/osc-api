// Code generated by go-swagger; DO NOT EDIT.

package vm

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"
)

// ReadAdminPasswordReader is a Reader for the ReadAdminPassword structure.
type ReadAdminPasswordReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *ReadAdminPasswordReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewReadAdminPasswordOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewReadAdminPasswordBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewReadAdminPasswordUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewReadAdminPasswordInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewReadAdminPasswordOK creates a ReadAdminPasswordOK with default headers values
func NewReadAdminPasswordOK() *ReadAdminPasswordOK {
	return &ReadAdminPasswordOK{}
}

/*ReadAdminPasswordOK handles this case with default header values.

The HTTP 200 response (OK).
*/
type ReadAdminPasswordOK struct {
}

func (o *ReadAdminPasswordOK) Error() string {
	return fmt.Sprintf("[POST /ReadAdminPassword][%d] readAdminPasswordOK ", 200)
}

func (o *ReadAdminPasswordOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewReadAdminPasswordBadRequest creates a ReadAdminPasswordBadRequest with default headers values
func NewReadAdminPasswordBadRequest() *ReadAdminPasswordBadRequest {
	return &ReadAdminPasswordBadRequest{}
}

/*ReadAdminPasswordBadRequest handles this case with default header values.

The HTTP 400 response (Bad Request).
*/
type ReadAdminPasswordBadRequest struct {
}

func (o *ReadAdminPasswordBadRequest) Error() string {
	return fmt.Sprintf("[POST /ReadAdminPassword][%d] readAdminPasswordBadRequest ", 400)
}

func (o *ReadAdminPasswordBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewReadAdminPasswordUnauthorized creates a ReadAdminPasswordUnauthorized with default headers values
func NewReadAdminPasswordUnauthorized() *ReadAdminPasswordUnauthorized {
	return &ReadAdminPasswordUnauthorized{}
}

/*ReadAdminPasswordUnauthorized handles this case with default header values.

The HTTP 401 response (Unauthorized).
*/
type ReadAdminPasswordUnauthorized struct {
}

func (o *ReadAdminPasswordUnauthorized) Error() string {
	return fmt.Sprintf("[POST /ReadAdminPassword][%d] readAdminPasswordUnauthorized ", 401)
}

func (o *ReadAdminPasswordUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewReadAdminPasswordInternalServerError creates a ReadAdminPasswordInternalServerError with default headers values
func NewReadAdminPasswordInternalServerError() *ReadAdminPasswordInternalServerError {
	return &ReadAdminPasswordInternalServerError{}
}

/*ReadAdminPasswordInternalServerError handles this case with default header values.

The HTTP 500 response (Internal Server Error).
*/
type ReadAdminPasswordInternalServerError struct {
}

func (o *ReadAdminPasswordInternalServerError) Error() string {
	return fmt.Sprintf("[POST /ReadAdminPassword][%d] readAdminPasswordInternalServerError ", 500)
}

func (o *ReadAdminPasswordInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
