// Code generated by go-swagger; DO NOT EDIT.

package vm

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"
)

// StopVmsReader is a Reader for the StopVms structure.
type StopVmsReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *StopVmsReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewStopVmsOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewStopVmsBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewStopVmsUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewStopVmsInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewStopVmsOK creates a StopVmsOK with default headers values
func NewStopVmsOK() *StopVmsOK {
	return &StopVmsOK{}
}

/*StopVmsOK handles this case with default header values.

The HTTP 200 response (OK).
*/
type StopVmsOK struct {
}

func (o *StopVmsOK) Error() string {
	return fmt.Sprintf("[POST /StopVms][%d] stopVmsOK ", 200)
}

func (o *StopVmsOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewStopVmsBadRequest creates a StopVmsBadRequest with default headers values
func NewStopVmsBadRequest() *StopVmsBadRequest {
	return &StopVmsBadRequest{}
}

/*StopVmsBadRequest handles this case with default header values.

The HTTP 400 response (Bad Request).
*/
type StopVmsBadRequest struct {
}

func (o *StopVmsBadRequest) Error() string {
	return fmt.Sprintf("[POST /StopVms][%d] stopVmsBadRequest ", 400)
}

func (o *StopVmsBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewStopVmsUnauthorized creates a StopVmsUnauthorized with default headers values
func NewStopVmsUnauthorized() *StopVmsUnauthorized {
	return &StopVmsUnauthorized{}
}

/*StopVmsUnauthorized handles this case with default header values.

The HTTP 401 response (Unauthorized).
*/
type StopVmsUnauthorized struct {
}

func (o *StopVmsUnauthorized) Error() string {
	return fmt.Sprintf("[POST /StopVms][%d] stopVmsUnauthorized ", 401)
}

func (o *StopVmsUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewStopVmsInternalServerError creates a StopVmsInternalServerError with default headers values
func NewStopVmsInternalServerError() *StopVmsInternalServerError {
	return &StopVmsInternalServerError{}
}

/*StopVmsInternalServerError handles this case with default header values.

The HTTP 500 response (Internal Server Error).
*/
type StopVmsInternalServerError struct {
}

func (o *StopVmsInternalServerError) Error() string {
	return fmt.Sprintf("[POST /StopVms][%d] stopVmsInternalServerError ", 500)
}

func (o *StopVmsInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
