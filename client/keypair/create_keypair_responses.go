// Code generated by go-swagger; DO NOT EDIT.

package keypair

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"
)

// CreateKeypairReader is a Reader for the CreateKeypair structure.
type CreateKeypairReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *CreateKeypairReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewCreateKeypairOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewCreateKeypairBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewCreateKeypairUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 409:
		result := NewCreateKeypairConflict()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewCreateKeypairInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewCreateKeypairOK creates a CreateKeypairOK with default headers values
func NewCreateKeypairOK() *CreateKeypairOK {
	return &CreateKeypairOK{}
}

/*CreateKeypairOK handles this case with default header values.

The HTTP 200 response (OK).
*/
type CreateKeypairOK struct {
}

func (o *CreateKeypairOK) Error() string {
	return fmt.Sprintf("[POST /CreateKeypair][%d] createKeypairOK ", 200)
}

func (o *CreateKeypairOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewCreateKeypairBadRequest creates a CreateKeypairBadRequest with default headers values
func NewCreateKeypairBadRequest() *CreateKeypairBadRequest {
	return &CreateKeypairBadRequest{}
}

/*CreateKeypairBadRequest handles this case with default header values.

The HTTP 400 response (Bad Request).
*/
type CreateKeypairBadRequest struct {
}

func (o *CreateKeypairBadRequest) Error() string {
	return fmt.Sprintf("[POST /CreateKeypair][%d] createKeypairBadRequest ", 400)
}

func (o *CreateKeypairBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewCreateKeypairUnauthorized creates a CreateKeypairUnauthorized with default headers values
func NewCreateKeypairUnauthorized() *CreateKeypairUnauthorized {
	return &CreateKeypairUnauthorized{}
}

/*CreateKeypairUnauthorized handles this case with default header values.

The HTTP 401 response (Unauthorized).
*/
type CreateKeypairUnauthorized struct {
}

func (o *CreateKeypairUnauthorized) Error() string {
	return fmt.Sprintf("[POST /CreateKeypair][%d] createKeypairUnauthorized ", 401)
}

func (o *CreateKeypairUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewCreateKeypairConflict creates a CreateKeypairConflict with default headers values
func NewCreateKeypairConflict() *CreateKeypairConflict {
	return &CreateKeypairConflict{}
}

/*CreateKeypairConflict handles this case with default header values.

The HTTP 409 response (Conflict).
*/
type CreateKeypairConflict struct {
}

func (o *CreateKeypairConflict) Error() string {
	return fmt.Sprintf("[POST /CreateKeypair][%d] createKeypairConflict ", 409)
}

func (o *CreateKeypairConflict) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewCreateKeypairInternalServerError creates a CreateKeypairInternalServerError with default headers values
func NewCreateKeypairInternalServerError() *CreateKeypairInternalServerError {
	return &CreateKeypairInternalServerError{}
}

/*CreateKeypairInternalServerError handles this case with default header values.

The HTTP 500 response (Internal Server Error).
*/
type CreateKeypairInternalServerError struct {
}

func (o *CreateKeypairInternalServerError) Error() string {
	return fmt.Sprintf("[POST /CreateKeypair][%d] createKeypairInternalServerError ", 500)
}

func (o *CreateKeypairInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
